apply plugin: "com.android.application"
apply plugin: "jacoco"

dependencies {
    compile 'com.android.support:appcompat-v7:22.2.1'
    compile 'com.android.support:cardview-v7:22.2.1'
    compile 'com.android.support:recyclerview-v7:22.2.1'
    compile 'com.android.support:design:22.2.1'

    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'org.twitter4j:twitter4j-core:4.0.4'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.makeramen:roundedimageview:2.0.1'

    //debugCompile 'com.squareup.leakcanary:leakcanary-android:1.3'
    //releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.3'

    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'org.mockito:mockito-all:1.10.19'
    testCompile 'com.squareup.assertj:assertj-android:1.1.0'
    testCompile 'com.squareup.okhttp:mockwebserver:2.4.0'
    testCompile 'org.robolectric:robolectric:3.0'
    testCompile 'org.powermock:powermock-core:1.6.2'
    testCompile 'org.powermock:powermock-api-mockito:1.6.2'
    testCompile 'org.powermock:powermock-module-junit4:1.6.2'
    testCompile 'org.powermock:powermock-module-junit4-rule:1.6.2'
    testCompile 'org.powermock:powermock-classloading-base:1.6.2'
    testCompile 'org.powermock:powermock-classloading-xstream:1.6.2'
}

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/services/javax.annotation.processing.Processor'
    }

    lintOptions {
        disable 'InvalidPackage'
        disable 'RtlEnabled'
        disable 'RtlHardcoded'
    }

    buildTypes {
        debug {
            testCoverageEnabled = true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    /*
    jacoco {
        version = "0.7.5.201505241946"
    }
    */
}

task jacoco(type: JacocoReport, dependsOn: "testDebug") {
    reports {
        xml.enabled = true
        html.enabled = true
    }
    classDirectories = fileTree(
            dir: "${project.buildDir}/intermediates/classes/debug",
            excludes: ['**/R.class',
                       '**/R$*.class',
                       '**/BuildConfig.class',
                       '**/*$ViewBinder*.*'
            ])
    sourceDirectories = files("${project.projectDir}/src/main/java")
    executionData = fileTree(dir: project.projectDir, includes: ['**/*.exec', '**/*.ec'])
}
